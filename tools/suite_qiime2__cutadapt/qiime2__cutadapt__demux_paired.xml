<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 0+untagged.150.g81fc4fa)
for:
    qiime2 (version: 2023.11.0.dev0+16.gc95b12b)
-->
<tool name="qiime2 cutadapt demux-paired" id="qiime2__cutadapt__demux_paired" version="2023.11.0.dev0+3.gc78541c-q2galaxy.0.untagged.150.g81fc4fa" profile="20.09" license="BSD-3-Clause">
    <description>Demultiplex paired-end sequence data with barcodes in-sequence.</description>
    <requirements>
        <requirement type="package" version="0+untagged.150.g81fc4fa">q2galaxy</requirement>
        <requirement type="package" version="2023.11.0.dev0+3.gc78541c">q2-cutadapt</requirement>
        <requirement type="package" version="4.6">cutadapt</requirement>
        <requirement type="package" version="1.2.0">dnaio</requirement>
        <requirement type="package" version="13.2.0">libgcc-ng</requirement>
        <requirement type="package" version="4.5">_openmp_mutex</requirement>
        <requirement type="package" version="0.1">_libgcc_mutex</requirement>
        <requirement type="package" version="13.2.0">libgomp</requirement>
        <requirement type="package" version="3.8.15">python</requirement>
        <requirement type="package" version="24.0">pip</requirement>
        <requirement type="package" version="69.0.3">setuptools</requirement>
        <requirement type="package" version="0.42.0">wheel</requirement>
        <requirement type="package" version="1.2.13">libzlib</requirement>
        <requirement type="package" version="1.0.8">bzip2</requirement>
        <requirement type="package" version="2.38.1">libuuid</requirement>
        <requirement type="package" version="5.2.6">xz</requirement>
        <requirement type="package" version="6.4">ncurses</requirement>
        <requirement type="package" version="1.1.1w">openssl</requirement>
        <requirement type="package" version="2024.2.2">ca-certificates</requirement>
        <requirement type="package" version="3.45.1">libsqlite</requirement>
        <requirement type="package" version="8.2">readline</requirement>
        <requirement type="package" version="8.6.13">tk</requirement>
        <requirement type="package" version="3.4.2">libffi</requirement>
        <requirement type="package" version="2.0.1">libnsl</requirement>
        <requirement type="package" version="2.40">ld_impl_linux-64</requirement>
        <requirement type="package" version="3.8">python_abi</requirement>
        <requirement type="package" version="1.9.0">xopen</requirement>
        <requirement type="package" version="0.22.0">zstandard</requirement>
        <requirement type="package" version="1.5.5">zstd</requirement>
        <requirement type="package" version="13.2.0">libstdcxx-ng</requirement>
        <requirement type="package" version="1.16.0">cffi</requirement>
        <requirement type="package" version="2.21">pycparser</requirement>
        <requirement type="package" version="2.8">pigz</requirement>
        <requirement type="package" version="1.1.13">pbzip2</requirement>
        <requirement type="package" version="2.31.0">isa-l</requirement>
        <requirement type="package" version="1.5.3">python-isal</requirement>
        <requirement type="package" version="1.24.4">numpy</requirement>
        <requirement type="package" version="3.9.0">libblas</requirement>
        <requirement type="package" version="0.3.25">libopenblas</requirement>
        <requirement type="package" version="13.2.0">libgfortran-ng</requirement>
        <requirement type="package" version="13.2.0">libgfortran5</requirement>
        <requirement type="package" version="3.9.0">liblapack</requirement>
        <requirement type="package" version="3.9.0">libcblas</requirement>
        <requirement type="package" version="1.5.3">pandas</requirement>
        <requirement type="package" version="2.8.2">python-dateutil</requirement>
        <requirement type="package" version="1.16.0">six</requirement>
        <requirement type="package" version="2024.1">pytz</requirement>
        <requirement type="package" version="2023.11.0.dev0+2.g1827eab">q2-types</requirement>
        <requirement type="package" version="2.1.14">biom-format</requirement>
        <requirement type="package" version="8.1.7">click</requirement>
        <requirement type="package" version="1.10.0">scipy</requirement>
        <requirement type="package" version="1.8.0">pooch</requirement>
        <requirement type="package" version="23.2">packaging</requirement>
        <requirement type="package" version="2.31.0">requests</requirement>
        <requirement type="package" version="3.6">idna</requirement>
        <requirement type="package" version="2024.2.2">certifi</requirement>
        <requirement type="package" version="3.3.2">charset-normalizer</requirement>
        <requirement type="package" version="2.2.0">urllib3</requirement>
        <requirement type="package" version="1.1.0">brotli-python</requirement>
        <requirement type="package" version="1.7.1">pysocks</requirement>
        <requirement type="package" version="4.2.0">platformdirs</requirement>
        <requirement type="package" version="3.8.0">h5py</requirement>
        <requirement type="package" version="1.5.2">cached-property</requirement>
        <requirement type="package" version="1.5.2">cached_property</requirement>
        <requirement type="package" version="1.14.0">hdf5</requirement>
        <requirement type="package" version="1.1.2">libaec</requirement>
        <requirement type="package" version="7.87.0">libcurl</requirement>
        <requirement type="package" version="1.20.1">krb5</requirement>
        <requirement type="package" version="3.1.20191231">libedit</requirement>
        <requirement type="package" version="1.6.1">keyutils</requirement>
        <requirement type="package" version="1.10.0">libssh2</requirement>
        <requirement type="package" version="1.51.0">libnghttp2</requirement>
        <requirement type="package" version="1.26.0">c-ares</requirement>
        <requirement type="package" version="4.33">libev</requirement>
        <requirement type="package" version="3.2.3">ijson</requirement>
        <requirement type="package" version="2023.11.0.dev0+16.gc95b12b">qiime2</requirement>
        <requirement type="package" version="1.4.4">appdirs</requirement>
        <requirement type="package" version="1.4.1">bibtexparser</requirement>
        <requirement type="package" version="3.1.1">pyparsing</requirement>
        <requirement type="package" version="4.4.2">decorator</requirement>
        <requirement type="package" version="0.3.8">dill</requirement>
        <requirement type="package" version="7.1">flufl.lock</requirement>
        <requirement type="package" version="5.9.8">psutil</requirement>
        <requirement type="package" version="3.0.1">atpublic</requirement>
        <requirement type="package" version="4.9.2">lxml</requirement>
        <requirement type="package" version="2.10.3">libxml2</requirement>
        <requirement type="package" version="1.17">libiconv</requirement>
        <requirement type="package" version="70.1">icu</requirement>
        <requirement type="package" version="1.1.37">libxslt</requirement>
        <requirement type="package" version="3.1">networkx</requirement>
        <requirement type="package" version="2023.12.4">parsl</requirement>
        <requirement type="package" version="4.9.0">typing-extensions</requirement>
        <requirement type="package" version="4.9.0">typing_extensions</requirement>
        <requirement type="package" version="3.4.0">paramiko</requirement>
        <requirement type="package" version="39.0.0">cryptography</requirement>
        <requirement type="package" version="4.1.2">bcrypt</requirement>
        <requirement type="package" version="1.5.0">pynacl</requirement>
        <requirement type="package" version="1.0.18">libsodium</requirement>
        <requirement type="package" version="3.35.0">globus-sdk</requirement>
        <requirement type="package" version="2.8.0">pyjwt</requirement>
        <requirement type="package" version="3.0.0">tblib</requirement>
        <requirement type="package" version="1.3.3">setproctitle</requirement>
        <requirement type="package" version="24.0.1">pyzmq</requirement>
        <requirement type="package" version="4.3.5">zeromq</requirement>
        <requirement type="package" version="2.13.3">typeguard</requirement>
        <requirement type="package" version="6.0.1">pyyaml</requirement>
        <requirement type="package" version="0.2.5">yaml</requirement>
        <requirement type="package" version="0.12.3">tomlkit</requirement>
        <requirement type="package" version="2.1">tzlocal</requirement>
        <requirement type="package" version="0.5.8">scikit-bio</requirement>
        <requirement type="package" version="8.0.0">pytest</requirement>
        <requirement type="package" version="0.4.6">colorama</requirement>
        <requirement type="package" version="2.0.0">iniconfig</requirement>
        <requirement type="package" version="1.2.0">exceptiongroup</requirement>
        <requirement type="package" version="2.0.1">tomli</requirement>
        <requirement type="package" version="1.4.0">pluggy</requirement>
        <requirement type="package" version="0.14.0">cachecontrol</requirement>
        <requirement type="package" version="1.0.7">msgpack-python</requirement>
        <requirement type="package" version="8.12.2">ipython</requirement>
        <requirement type="package" version="0.6.2">stack_data</requirement>
        <requirement type="package" version="2.4.1">asttokens</requirement>
        <requirement type="package" version="2.0.1">executing</requirement>
        <requirement type="package" version="0.2.2">pure_eval</requirement>
        <requirement type="package" version="0.1.6">matplotlib-inline</requirement>
        <requirement type="package" version="5.9.0">traitlets</requirement>
        <requirement type="package" version="0.7.5">pickleshare</requirement>
        <requirement type="package" version="0.2.0">backcall</requirement>
        <requirement type="package" version="2.17.2">pygments</requirement>
        <requirement type="package" version="0.19.1">jedi</requirement>
        <requirement type="package" version="0.8.3">parso</requirement>
        <requirement type="package" version="4.9.0">pexpect</requirement>
        <requirement type="package" version="0.7.0">ptyprocess</requirement>
        <requirement type="package" version="3.0.42">prompt_toolkit</requirement>
        <requirement type="package" version="3.0.42">prompt-toolkit</requirement>
        <requirement type="package" version="0.2.13">wcwidth</requirement>
        <requirement type="package" version="0.12.2">lockfile</requirement>
        <requirement type="package" version="8.4.0">natsort</requirement>
        <requirement type="package" version="3.6.0">matplotlib-base</requirement>
        <requirement type="package" version="2.12.1">freetype</requirement>
        <requirement type="package" version="1.6.42">libpng</requirement>
        <requirement type="package" version="0.12.1">cycler</requirement>
        <requirement type="package" version="9.4.0">pillow</requirement>
        <requirement type="package" version="9e">jpeg</requirement>
        <requirement type="package" version="4.5.0">libtiff</requirement>
        <requirement type="package" version="1.3.2">libwebp-base</requirement>
        <requirement type="package" version="4.0.0">lerc</requirement>
        <requirement type="package" version="1.17">libdeflate</requirement>
        <requirement type="package" version="2.5.0">openjpeg</requirement>
        <requirement type="package" version="1.13">libxcb</requirement>
        <requirement type="package" version="1.0.11">xorg-libxau</requirement>
        <requirement type="package" version="1.1.3">xorg-libxdmcp</requirement>
        <requirement type="package" version="0.4">pthread-stubs</requirement>
        <requirement type="package" version="2.15">lcms2</requirement>
        <requirement type="package" version="1.4.5">kiwisolver</requirement>
        <requirement type="package" version="4.48.1">fonttools</requirement>
        <requirement type="package" version="1.1.0">brotli</requirement>
        <requirement type="package" version="1.1.0">libbrotlidec</requirement>
        <requirement type="package" version="1.1.0">libbrotlicommon</requirement>
        <requirement type="package" version="1.1.0">libbrotlienc</requirement>
        <requirement type="package" version="1.1.0">brotli-bin</requirement>
        <requirement type="package" version="1.1.4">munkres</requirement>
        <requirement type="package" version="15.1.0">unicodedata2</requirement>
        <requirement type="package" version="1.1.1">contourpy</requirement>
        <requirement type="package" version="0.14.2">hdmedians</requirement>
        <requirement type="package" version="3.0.8">cython</requirement>
    </requirements>
    <version_command>q2galaxy version cutadapt</version_command>
    <command detect_errors="exit_code">q2galaxy run cutadapt demux_paired '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="seqs" type="data" format="qza" label="seqs: MultiplexedPairedEndBarcodeInSequence" help="[required]  The paired-end sequences to be demultiplexed.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="MultiplexedPairedEndBarcodeInSequence"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['MultiplexedPairedEndBarcodeInSequence']</validator>
        </param>
        <conditional name="forward_barcodes">
            <param name="type" type="select" label="forward_barcodes: MetadataColumn[Categorical]" help="[required]  The sample metadata column listing the per-sample barcodes for the forward reads.">
                <option value="tsv" selected="true">Metadata from TSV</option>
                <option value="qza">Metadata from Artifact</option>
            </param>
            <when value="tsv">
                <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                    <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                </param>
            </when>
            <when value="qza">
                <param name="source" type="data" format="qza" label="Metadata Source"/>
                <param name="column" type="text" label="Column Name">
                    <validator type="empty_field"/>
                </param>
            </when>
        </conditional>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <conditional name="reverse_barcodes">
                <param name="type" type="select" label="reverse_barcodes: MetadataColumn[Categorical]" help="[optional]  The sample metadata column listing the per-sample barcodes for the reverse reads.">
                    <option value="none" selected="true">None (default)</option>
                    <option value="tsv">Metadata from TSV</option>
                    <option value="qza">Metadata from Artifact</option>
                </param>
                <when value="none"/>
                <when value="tsv">
                    <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                    <param name="column" type="data_column" label="Column Name" data_ref="source" use_header_names="true">
                        <validator type="expression" message="The first column cannot be selected (they are IDs).">value != "1"</validator>
                    </param>
                </when>
                <when value="qza">
                    <param name="source" type="data" format="qza" label="Metadata Source"/>
                    <param name="column" type="text" label="Column Name">
                        <validator type="empty_field"/>
                    </param>
                </when>
            </conditional>
            <param name="forward_cut" type="integer" value="0" label="forward_cut: Int" help="[default: 0]  Remove the specified number of bases from the forward sequences. Bases are removed before demultiplexing. If a positive value is provided, bases are removed from the beginning of the sequences. If a negative value is provided, bases are removed from the end of the sequences. If --p-mixed-orientation is set, then both --p-forward-cut and --p-reverse-cut must be set to the same value."/>
            <param name="reverse_cut" type="integer" value="0" label="reverse_cut: Int" help="[default: 0]  Remove the specified number of bases from the reverse sequences. Bases are removed before demultiplexing. If a positive value is provided, bases are removed from the beginning of the sequences. If a negative value is provided, bases are removed from the end of the sequences. If --p-mixed-orientation is set, then both --p-forward-cut and --p-reverse-cut must be set to the same value."/>
            <param name="anchor_forward_barcode" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="anchor_forward_barcode: Bool" help="[default: No]  Anchor the forward barcode. The barcode is then expected to occur in full length at the beginning (5' end) of the forward sequence. Can speed up demultiplexing if used."/>
            <param name="anchor_reverse_barcode" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="anchor_reverse_barcode: Bool" help="[default: No]  Anchor the reverse barcode. The barcode is then expected to occur in full length at the beginning (5' end) of the reverse sequence. Can speed up demultiplexing if used."/>
            <param name="error_rate" type="float" min="0" max="1" value="0.1" label="error_rate: Float % Range(0, 1, inclusive_end=True)" help="[default: 0.1]  The level of error tolerance, specified as the maximum allowable error rate."/>
            <param name="batch_size" type="integer" min="0" value="0" label="batch_size: Int % Range(0, None)" help="[default: 0]  The number of samples cutadapt demultiplexes concurrently. Demultiplexing in smaller batches will yield the same result with marginal speed loss, and may solve &quot;too many files&quot; errors related to sample quantity. Set to &quot;0&quot; to process all samples at once."/>
            <param name="minimum_length" type="integer" min="1" value="1" label="minimum_length: Int % Range(1, None)" help="[default: 1]  Discard reads shorter than specified value. Note, the cutadapt default of 0 has been overridden, because that value produces empty sequence records."/>
            <param name="mixed_orientation" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="mixed_orientation: Bool" help="[default: No]  Handle demultiplexing of mixed orientation reads (i.e. when forward and reverse reads coexist in the same file)."/>
            <param name="cores" type="integer" min="1" value="1" label="cores: Int % Range(1, None)" help="[default: 1]  Number of CPU cores to use."/>
        </section>
    </inputs>
    <outputs>
        <data name="per_sample_sequences" format="qza" label="${tool.id} on ${on_string}: per_sample_sequences.qza" from_work_dir="per_sample_sequences.qza"/>
        <data name="untrimmed_sequences" format="qza" label="${tool.id} on ${on_string}: untrimmed_sequences.qza" from_work_dir="untrimmed_sequences.qza"/>
    </outputs>
    <tests>
        <test>
            <param name="seqs" value="demux_paired.test0.seqs.qza" ftype="qza"/>
            <conditional name="forward_barcodes">
                <param name="type" value="tsv"/>
                <param name="source" value="demux_paired.test0.md.tsv" ftype="qiime2.tabular"/>
                <param name="column" value="2"/>
            </conditional>
            <output name="per_sample_sequences" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: SampleData\[PairedEndSequencesWithQuality\]"/>
                    </has_archive_member>
                </assert_contents>
            </output>
            <output name="untrimmed_sequences" ftype="qza">
                <assert_contents>
                    <has_archive_member path="[0-9a-f]{8}-[0-9a-f]{4}-[4][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}\/metadata.yaml">
                        <has_line_matching expression="type: MultiplexedPairedEndBarcodeInSequence"/>
                    </has_archive_member>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
QIIME 2: cutadapt demux-paired
==============================
Demultiplex paired-end sequence data with barcodes in-sequence.


Outputs:
--------
:per_sample_sequences.qza: The resulting demultiplexed sequences.
:untrimmed_sequences.qza: The sequences that were unmatched to barcodes.

|  

Description:
------------
Demultiplex sequence data (i.e., map barcode reads to sample ids). Barcodes are expected to be located within the sequence data (versus the header, or a separate barcode file).

Examples:
---------

paired
******
Using the ``qiime2 cutadapt demux-paired`` tool:
 #. Set *"seqs"* to ``#: seqs.qza``
 #. For *"forward_barcodes"*:

    #. Leave as ``Metadata from TSV``
    #. Set *"Metadata Source"* to ``md.tsv``
    #. Set *"Column Name"* to ``barcode-sequence``

 #. Press the ``Execute`` button.



|  

</help>
    <citations>
        <citation type="doi">10.14806/ej.17.1.200</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
