<?xml version='1.0' encoding='utf-8'?>
<!--
Copyright (c) 2024, QIIME 2 development team.

Distributed under the terms of the Modified BSD License. (SPDX: BSD-3-Clause)
-->
<!--
This tool was automatically generated by:
    q2galaxy (version: 0+untagged.150.g81fc4fa)
for:
    qiime2 (version: 2023.11.0.dev0+16.gc95b12b)
-->
<tool name="qiime2 longitudinal maturity-index" id="qiime2__longitudinal__maturity_index" version="2023.11.0.dev0+3.gd55ee50-q2galaxy.0.untagged.150.g81fc4fa" profile="20.09" license="BSD-3-Clause">
    <description>Microbial maturity index prediction.</description>
    <requirements>
        <requirement type="package" version="0+untagged.150.g81fc4fa">q2galaxy</requirement>
        <requirement type="package" version="2023.11.0.dev0+3.gd55ee50">q2-longitudinal</requirement>
        <requirement type="package" version="3.6.0">matplotlib</requirement>
        <requirement type="package" version="5.15.7">pyqt</requirement>
        <requirement type="package" version="13.2.0">libgcc-ng</requirement>
        <requirement type="package" version="4.5">_openmp_mutex</requirement>
        <requirement type="package" version="0.1">_libgcc_mutex</requirement>
        <requirement type="package" version="13.2.0">libgomp</requirement>
        <requirement type="package" version="13.2.0">libstdcxx-ng</requirement>
        <requirement type="package" version="3.8.15">python</requirement>
        <requirement type="package" version="24.0">pip</requirement>
        <requirement type="package" version="69.0.3">setuptools</requirement>
        <requirement type="package" version="0.42.0">wheel</requirement>
        <requirement type="package" version="1.2.13">libzlib</requirement>
        <requirement type="package" version="1.0.8">bzip2</requirement>
        <requirement type="package" version="2.38.1">libuuid</requirement>
        <requirement type="package" version="5.2.6">xz</requirement>
        <requirement type="package" version="6.4">ncurses</requirement>
        <requirement type="package" version="1.1.1w">openssl</requirement>
        <requirement type="package" version="2024.2.2">ca-certificates</requirement>
        <requirement type="package" version="3.45.1">libsqlite</requirement>
        <requirement type="package" version="8.2">readline</requirement>
        <requirement type="package" version="8.6.13">tk</requirement>
        <requirement type="package" version="3.4.2">libffi</requirement>
        <requirement type="package" version="2.0.1">libnsl</requirement>
        <requirement type="package" version="2.40">ld_impl_linux-64</requirement>
        <requirement type="package" version="3.8">python_abi</requirement>
        <requirement type="package" version="5.15.6">qt-main</requirement>
        <requirement type="package" version="1">fonts-conda-ecosystem</requirement>
        <requirement type="package" version="1">fonts-conda-forge</requirement>
        <requirement type="package" version="3.000">font-ttf-inconsolata</requirement>
        <requirement type="package" version="2.038">font-ttf-source-code-pro</requirement>
        <requirement type="package" version="0.83">font-ttf-ubuntu</requirement>
        <requirement type="package" version="2.37">font-ttf-dejavu-sans-mono</requirement>
        <requirement type="package" version="0.4.0">xcb-util</requirement>
        <requirement type="package" version="1.13">libxcb</requirement>
        <requirement type="package" version="1.0.11">xorg-libxau</requirement>
        <requirement type="package" version="1.1.3">xorg-libxdmcp</requirement>
        <requirement type="package" version="0.4">pthread-stubs</requirement>
        <requirement type="package" version="0.4.0">xcb-util-keysyms</requirement>
        <requirement type="package" version="0.4.1">xcb-util-wm</requirement>
        <requirement type="package" version="0.4.0">xcb-util-image</requirement>
        <requirement type="package" version="0.3.9">xcb-util-renderutil</requirement>
        <requirement type="package" version="1.5.5">zstd</requirement>
        <requirement type="package" version="1.6.42">libpng</requirement>
        <requirement type="package" version="2.12.1">freetype</requirement>
        <requirement type="package" version="9e">jpeg</requirement>
        <requirement type="package" version="2.10.3">libxml2</requirement>
        <requirement type="package" version="1.17">libiconv</requirement>
        <requirement type="package" version="70.1">icu</requirement>
        <requirement type="package" version="2.78.1">libglib</requirement>
        <requirement type="package" version="10.40">pcre2</requirement>
        <requirement type="package" version="0.21.1">gettext</requirement>
        <requirement type="package" version="2.5.0">expat</requirement>
        <requirement type="package" version="2.5.0">libexpat</requirement>
        <requirement type="package" version="1.13.6">dbus</requirement>
        <requirement type="package" version="1.20.1">krb5</requirement>
        <requirement type="package" version="3.1.20191231">libedit</requirement>
        <requirement type="package" version="1.6.1">keyutils</requirement>
        <requirement type="package" version="2.1.10">libevent</requirement>
        <requirement type="package" version="1.2.8">alsa-lib</requirement>
        <requirement type="package" version="15.1">libpq</requirement>
        <requirement type="package" version="2.3.3">libcups</requirement>
        <requirement type="package" version="1.5.0">libxkbcommon</requirement>
        <requirement type="package" version="2.38">xkeyboard-config</requirement>
        <requirement type="package" version="2.14.2">fontconfig</requirement>
        <requirement type="package" version="15.0.7">libclang13</requirement>
        <requirement type="package" version="15.0.7">libllvm15</requirement>
        <requirement type="package" version="6.0.0">harfbuzz</requirement>
        <requirement type="package" version="1.3.13">graphite2</requirement>
        <requirement type="package" version="1.16.0">cairo</requirement>
        <requirement type="package" version="1.8.4">xorg-libx11</requirement>
        <requirement type="package" version="7.0.31">xorg-xproto</requirement>
        <requirement type="package" version="1.0.7">xorg-kbproto</requirement>
        <requirement type="package" version="7.3.0">xorg-xextproto</requirement>
        <requirement type="package" version="1.3.4">xorg-libxext</requirement>
        <requirement type="package" version="0.9.10">xorg-libxrender</requirement>
        <requirement type="package" version="0.11.1">xorg-renderproto</requirement>
        <requirement type="package" version="1.2.3">xorg-libsm</requirement>
        <requirement type="package" version="1.0.10">xorg-libice</requirement>
        <requirement type="package" version="1.2.13">zlib</requirement>
        <requirement type="package" version="0.43.2">pixman</requirement>
        <requirement type="package" version="15.0.7">libclang</requirement>
        <requirement type="package" version="8.0.32">mysql-libs</requirement>
        <requirement type="package" version="8.0.32">mysql-common</requirement>
        <requirement type="package" version="16.1">pulseaudio</requirement>
        <requirement type="package" version="3.3.10">fftw</requirement>
        <requirement type="package" version="13.2.0">libgfortran-ng</requirement>
        <requirement type="package" version="13.2.0">libgfortran5</requirement>
        <requirement type="package" version="1.9.22">jack</requirement>
        <requirement type="package" version="1.3.1">libopus</requirement>
        <requirement type="package" version="6.2.32">libdb</requirement>
        <requirement type="package" version="1.2.2">libsndfile</requirement>
        <requirement type="package" version="1.3.4">libogg</requirement>
        <requirement type="package" version="3.100">lame</requirement>
        <requirement type="package" version="1.3.7">libvorbis</requirement>
        <requirement type="package" version="1.4.3">libflac</requirement>
        <requirement type="package" version="1.32.4">mpg123</requirement>
        <requirement type="package" version="2.66">libcap</requirement>
        <requirement type="package" version="2.5.1">attr</requirement>
        <requirement type="package" version="2.4.7">libtool</requirement>
        <requirement type="package" version="0.4.37">gstreamer-orc</requirement>
        <requirement type="package" version="252">libsystemd0</requirement>
        <requirement type="package" version="1.9.4">lz4-c</requirement>
        <requirement type="package" version="1.10.3">libgcrypt</requirement>
        <requirement type="package" version="1.47">libgpg-error</requirement>
        <requirement type="package" version="253">libudev1</requirement>
        <requirement type="package" version="4.35">nspr</requirement>
        <requirement type="package" version="1.21.3">gstreamer</requirement>
        <requirement type="package" version="2.78.1">glib</requirement>
        <requirement type="package" version="2.78.1">glib-tools</requirement>
        <requirement type="package" version="1.21.3">gst-plugins-base</requirement>
        <requirement type="package" version="3.97">nss</requirement>
        <requirement type="package" version="6.7.12">sip</requirement>
        <requirement type="package" version="23.2">packaging</requirement>
        <requirement type="package" version="3.11">ply</requirement>
        <requirement type="package" version="2.0.1">tomli</requirement>
        <requirement type="package" version="12.11.0">pyqt5-sip</requirement>
        <requirement type="package" version="0.10.2">toml</requirement>
        <requirement type="package" version="6.3.3">tornado</requirement>
        <requirement type="package" version="3.6.0">matplotlib-base</requirement>
        <requirement type="package" version="1.24.4">numpy</requirement>
        <requirement type="package" version="3.9.0">libblas</requirement>
        <requirement type="package" version="0.3.25">libopenblas</requirement>
        <requirement type="package" version="3.9.0">liblapack</requirement>
        <requirement type="package" version="3.9.0">libcblas</requirement>
        <requirement type="package" version="0.12.1">cycler</requirement>
        <requirement type="package" version="9.4.0">pillow</requirement>
        <requirement type="package" version="4.5.0">libtiff</requirement>
        <requirement type="package" version="1.3.2">libwebp-base</requirement>
        <requirement type="package" version="4.0.0">lerc</requirement>
        <requirement type="package" version="1.17">libdeflate</requirement>
        <requirement type="package" version="2.5.0">openjpeg</requirement>
        <requirement type="package" version="2.15">lcms2</requirement>
        <requirement type="package" version="2024.2.2">certifi</requirement>
        <requirement type="package" version="1.4.5">kiwisolver</requirement>
        <requirement type="package" version="2.8.2">python-dateutil</requirement>
        <requirement type="package" version="1.16.0">six</requirement>
        <requirement type="package" version="4.48.1">fonttools</requirement>
        <requirement type="package" version="1.1.0">brotli</requirement>
        <requirement type="package" version="1.1.0">libbrotlidec</requirement>
        <requirement type="package" version="1.1.0">libbrotlicommon</requirement>
        <requirement type="package" version="1.1.0">libbrotlienc</requirement>
        <requirement type="package" version="1.1.0">brotli-bin</requirement>
        <requirement type="package" version="1.1.4">munkres</requirement>
        <requirement type="package" version="15.1.0">unicodedata2</requirement>
        <requirement type="package" version="1.1.1">contourpy</requirement>
        <requirement type="package" version="3.1.1">pyparsing</requirement>
        <requirement type="package" version="1.5.3">pandas</requirement>
        <requirement type="package" version="2024.1">pytz</requirement>
        <requirement type="package" version="0.5.3">patsy</requirement>
        <requirement type="package" version="1.10.0">scipy</requirement>
        <requirement type="package" version="1.8.0">pooch</requirement>
        <requirement type="package" version="2.31.0">requests</requirement>
        <requirement type="package" version="3.6">idna</requirement>
        <requirement type="package" version="3.3.2">charset-normalizer</requirement>
        <requirement type="package" version="2.2.0">urllib3</requirement>
        <requirement type="package" version="1.1.0">brotli-python</requirement>
        <requirement type="package" version="1.7.1">pysocks</requirement>
        <requirement type="package" version="4.2.0">platformdirs</requirement>
        <requirement type="package" version="2023.11.0.dev0+8.g9f87ffb">q2-feature-table</requirement>
        <requirement type="package" version="2.1.14">biom-format</requirement>
        <requirement type="package" version="8.1.7">click</requirement>
        <requirement type="package" version="3.8.0">h5py</requirement>
        <requirement type="package" version="1.5.2">cached-property</requirement>
        <requirement type="package" version="1.5.2">cached_property</requirement>
        <requirement type="package" version="1.14.0">hdf5</requirement>
        <requirement type="package" version="1.1.2">libaec</requirement>
        <requirement type="package" version="7.87.0">libcurl</requirement>
        <requirement type="package" version="1.10.0">libssh2</requirement>
        <requirement type="package" version="1.51.0">libnghttp2</requirement>
        <requirement type="package" version="1.26.0">c-ares</requirement>
        <requirement type="package" version="4.33">libev</requirement>
        <requirement type="package" version="8.1.2">ipywidgets</requirement>
        <requirement type="package" version="5.9.0">traitlets</requirement>
        <requirement type="package" version="8.12.2">ipython</requirement>
        <requirement type="package" version="4.9.0">typing_extensions</requirement>
        <requirement type="package" version="4.4.2">decorator</requirement>
        <requirement type="package" version="0.6.2">stack_data</requirement>
        <requirement type="package" version="2.4.1">asttokens</requirement>
        <requirement type="package" version="2.0.1">executing</requirement>
        <requirement type="package" version="0.2.2">pure_eval</requirement>
        <requirement type="package" version="0.1.6">matplotlib-inline</requirement>
        <requirement type="package" version="0.7.5">pickleshare</requirement>
        <requirement type="package" version="0.2.0">backcall</requirement>
        <requirement type="package" version="2.17.2">pygments</requirement>
        <requirement type="package" version="0.19.1">jedi</requirement>
        <requirement type="package" version="0.8.3">parso</requirement>
        <requirement type="package" version="4.9.0">pexpect</requirement>
        <requirement type="package" version="0.7.0">ptyprocess</requirement>
        <requirement type="package" version="3.0.42">prompt_toolkit</requirement>
        <requirement type="package" version="3.0.42">prompt-toolkit</requirement>
        <requirement type="package" version="0.2.13">wcwidth</requirement>
        <requirement type="package" version="0.2.1">comm</requirement>
        <requirement type="package" version="3.0.10">jupyterlab_widgets</requirement>
        <requirement type="package" version="4.0.10">widgetsnbextension</requirement>
        <requirement type="package" version="2023.11.0.dev0+2.g1827eab">q2-types</requirement>
        <requirement type="package" version="3.2.3">ijson</requirement>
        <requirement type="package" version="2023.11.0.dev0+16.gc95b12b">qiime2</requirement>
        <requirement type="package" version="1.4.4">appdirs</requirement>
        <requirement type="package" version="1.4.1">bibtexparser</requirement>
        <requirement type="package" version="0.3.8">dill</requirement>
        <requirement type="package" version="7.1">flufl.lock</requirement>
        <requirement type="package" version="5.9.8">psutil</requirement>
        <requirement type="package" version="3.0.1">atpublic</requirement>
        <requirement type="package" version="4.9.2">lxml</requirement>
        <requirement type="package" version="1.1.37">libxslt</requirement>
        <requirement type="package" version="3.1">networkx</requirement>
        <requirement type="package" version="2023.12.4">parsl</requirement>
        <requirement type="package" version="4.9.0">typing-extensions</requirement>
        <requirement type="package" version="3.4.0">paramiko</requirement>
        <requirement type="package" version="39.0.0">cryptography</requirement>
        <requirement type="package" version="1.16.0">cffi</requirement>
        <requirement type="package" version="2.21">pycparser</requirement>
        <requirement type="package" version="4.1.2">bcrypt</requirement>
        <requirement type="package" version="1.5.0">pynacl</requirement>
        <requirement type="package" version="1.0.18">libsodium</requirement>
        <requirement type="package" version="3.35.0">globus-sdk</requirement>
        <requirement type="package" version="2.8.0">pyjwt</requirement>
        <requirement type="package" version="3.0.0">tblib</requirement>
        <requirement type="package" version="1.3.3">setproctitle</requirement>
        <requirement type="package" version="24.0.1">pyzmq</requirement>
        <requirement type="package" version="4.3.5">zeromq</requirement>
        <requirement type="package" version="2.13.3">typeguard</requirement>
        <requirement type="package" version="6.0.1">pyyaml</requirement>
        <requirement type="package" version="0.2.5">yaml</requirement>
        <requirement type="package" version="0.12.3">tomlkit</requirement>
        <requirement type="package" version="2.1">tzlocal</requirement>
        <requirement type="package" version="0.5.8">scikit-bio</requirement>
        <requirement type="package" version="8.0.0">pytest</requirement>
        <requirement type="package" version="0.4.6">colorama</requirement>
        <requirement type="package" version="2.0.0">iniconfig</requirement>
        <requirement type="package" version="1.2.0">exceptiongroup</requirement>
        <requirement type="package" version="1.4.0">pluggy</requirement>
        <requirement type="package" version="0.14.0">cachecontrol</requirement>
        <requirement type="package" version="1.0.7">msgpack-python</requirement>
        <requirement type="package" version="0.12.2">lockfile</requirement>
        <requirement type="package" version="8.4.0">natsort</requirement>
        <requirement type="package" version="0.14.2">hdmedians</requirement>
        <requirement type="package" version="3.0.8">cython</requirement>
        <requirement type="package" version="2023.11.0.dev0+1.gba531e6">q2templates</requirement>
        <requirement type="package" version="3.1.3">jinja2</requirement>
        <requirement type="package" version="2.1.5">markupsafe</requirement>
        <requirement type="package" version="0.12.2">seaborn</requirement>
        <requirement type="package" version="0.14.0">statsmodels</requirement>
        <requirement type="package" version="0.12.2">seaborn-base</requirement>
        <requirement type="package" version="2023.11.0.dev0+3.g7aef7e7">q2-sample-classifier</requirement>
        <requirement type="package" version="1.2.6">fastcluster</requirement>
        <requirement type="package" version="1.3.2">joblib</requirement>
        <requirement type="package" version="0.24.1">scikit-learn</requirement>
        <requirement type="package" version="3.2.0">threadpoolctl</requirement>
    </requirements>
    <version_command>q2galaxy version longitudinal</version_command>
    <command detect_errors="exit_code">q2galaxy run longitudinal maturity_index '$inputs'</command>
    <configfiles>
        <inputs name="inputs" data_style="staging_path_and_source_path"/>
    </configfiles>
    <inputs>
        <param name="table" type="data" format="qza" label="table: FeatureTable[Frequency]" help="[required]  Feature table containing all features that should be used for target prediction.">
            <options options_filter_attribute="metadata.semantic_type">
                <filter type="add_value" value="FeatureTable[Frequency]"/>
            </options>
            <validator type="expression" message="Incompatible type">hasattr(value.metadata, "semantic_type") and value.metadata.semantic_type in ['FeatureTable[Frequency]']</validator>
        </param>
        <repeat name="metadata" min="1" help="[required]" title="metadata: Metadata">
            <conditional name="__q2galaxy__GUI__conditional__metadata__">
                <param name="type" type="select" label="metadata: Metadata">
                    <option value="tsv" selected="true">Metadata from TSV</option>
                    <option value="qza">Metadata from Artifact</option>
                </param>
                <when value="tsv">
                    <param name="source" type="data" format="tabular,qiime2.tabular" label="Metadata Source"/>
                </when>
                <when value="qza">
                    <param name="source" type="data" format="qza" label="Metadata Source"/>
                </when>
            </conditional>
        </repeat>
        <param name="state_column" type="text" label="state_column: Str" help="[required]  Numeric metadata column containing sampling time (state) data to use as prediction target.">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
            <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
        </param>
        <param name="group_by" type="text" label="group_by: Str" help="[required]  Categorical metadata column to use for plotting and significance testing between main treatment groups.">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
            <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
        </param>
        <param name="control" type="text" label="control: Str" help="[required]  Value of group_by to use as control group. The regression model will be trained using only control group data, and the maturity scores of other groups consequently will be assessed relative to this group.">
            <sanitizer>
                <valid initial="string.printable"/>
            </sanitizer>
            <validator type="expression" message="Please verify this parameter.">value is not None and len(value) &gt; 0</validator>
        </param>
        <section name="__q2galaxy__GUI__section__extra_opts__" title="Click here for additional options">
            <conditional name="__q2galaxy__GUI__conditional__individual_id_column__" label="individual_id_column: Str">
                <param name="__q2galaxy__GUI__select__" type="select" label="individual_id_column: Str" help="[optional]  Optional metadata column containing IDs for individual subjects. Adds individual subject (spaghetti) vectors to volatility charts if a column name is provided.">
                    <option value="__q2galaxy__::control::default" selected="true">None (Use default behavior)</option>
                    <option value="__q2galaxy__::control::provide">Provide a value</option>
                </param>
                <when value="__q2galaxy__::control::default">
                    <param name="individual_id_column" type="hidden" value="__q2galaxy__::literal::None"/>
                </when>
                <when value="__q2galaxy__::control::provide">
                    <param name="individual_id_column" type="text">
                        <sanitizer>
                            <valid initial="string.printable"/>
                        </sanitizer>
                    </param>
                </when>
            </conditional>
            <param name="estimator" type="select" label="estimator: Str % Choices('RandomForestRegressor', 'ExtraTreesRegressor', 'GradientBoostingRegressor', 'AdaBoostRegressor[DecisionTree]', 'AdaBoostRegressor[ExtraTrees]', 'ElasticNet', 'Ridge', 'Lasso', 'KNeighborsRegressor', 'LinearSVR', 'SVR')">
                <option value="RandomForestRegressor" selected="true">RandomForestRegressor</option>
                <option value="ExtraTreesRegressor">ExtraTreesRegressor</option>
                <option value="GradientBoostingRegressor">GradientBoostingRegressor</option>
                <option value="AdaBoostRegressor__ob__DecisionTree__cb__">AdaBoostRegressor[DecisionTree]</option>
                <option value="AdaBoostRegressor__ob__ExtraTrees__cb__">AdaBoostRegressor[ExtraTrees]</option>
                <option value="ElasticNet">ElasticNet</option>
                <option value="Ridge">Ridge</option>
                <option value="Lasso">Lasso</option>
                <option value="KNeighborsRegressor">KNeighborsRegressor</option>
                <option value="LinearSVR">LinearSVR</option>
                <option value="SVR">SVR</option>
            </param>
            <param name="n_estimators" type="integer" min="1" value="100" label="n_estimators: Int % Range(1, None)" help="[default: 100]  Number of trees to grow for estimation. More trees will improve predictive accuracy up to a threshold level, but will also increase time and memory requirements. This parameter only affects ensemble estimators, such as Random Forest, AdaBoost, ExtraTrees, and GradientBoosting."/>
            <param name="test_size" type="float" min="0.0" max="0.999999" value="0.5" label="test_size: Float % Range(0.0, 1.0)" help="[default: 0.5]  Fraction of input samples to exclude from training set and use for classifier testing."/>
            <param name="step" type="float" min="1e-06" max="0.999999" value="0.05" label="step: Float % Range(0.0, 1.0, inclusive_start=False)" help="[default: 0.05]  If optimize_feature_selection is True, step is the percentage of features to remove at each iteration."/>
            <param name="cv" type="integer" min="1" value="5" label="cv: Int % Range(1, None)" help="[default: 5]  Number of k-fold cross-validations to perform."/>
            <param name="random_state" type="integer" optional="true" label="random_state: Int" help="[optional]  Seed used by random number generator."/>
            <param name="n_jobs" type="integer" value="1" label="n_jobs: Int" help="[default: 1]  Number of jobs to run in parallel."/>
            <param name="parameter_tuning" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="parameter_tuning: Bool" help="[default: No]  Automatically tune hyperparameters using random grid search."/>
            <param name="optimize_feature_selection" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="optimize_feature_selection: Bool" help="[default: No]  Automatically optimize input feature selection using recursive feature elimination."/>
            <param name="stratify" type="boolean" truevalue="__q2galaxy__::literal::True" falsevalue="__q2galaxy__::literal::False" label="stratify: Bool" help="[default: No]  Evenly stratify training and test data among metadata categories. If True, all values in column must match at least two samples."/>
            <param name="missing_samples" type="select" label="missing_samples: Str % Choices('error', 'ignore')" display="radio">
                <option value="error" selected="true">error</option>
                <option value="ignore">ignore</option>
            </param>
            <param name="feature_count" type="integer" min="0" value="50" label="feature_count: Int % Range(0, None)" help="[default: 50]  Filter feature table to include top N most important features. Set to zero to include all features."/>
        </section>
    </inputs>
    <outputs>
        <data name="sample_estimator" format="qza" label="${tool.id} on ${on_string}: sample_estimator.qza" from_work_dir="sample_estimator.qza"/>
        <data name="feature_importance" format="qza" label="${tool.id} on ${on_string}: feature_importance.qza" from_work_dir="feature_importance.qza"/>
        <data name="predictions" format="qza" label="${tool.id} on ${on_string}: predictions.qza" from_work_dir="predictions.qza"/>
        <data name="model_summary" format="qzv" label="${tool.id} on ${on_string}: model_summary.qzv" from_work_dir="model_summary.qzv"/>
        <data name="accuracy_results" format="qzv" label="${tool.id} on ${on_string}: accuracy_results.qzv" from_work_dir="accuracy_results.qzv"/>
        <data name="maz_scores" format="qza" label="${tool.id} on ${on_string}: maz_scores.qza" from_work_dir="maz_scores.qza"/>
        <data name="clustermap" format="qzv" label="${tool.id} on ${on_string}: clustermap.qzv" from_work_dir="clustermap.qzv"/>
        <data name="volatility_plots" format="qzv" label="${tool.id} on ${on_string}: volatility_plots.qzv" from_work_dir="volatility_plots.qzv"/>
    </outputs>
    <tests/>
    <help>
QIIME 2: longitudinal maturity-index
====================================
Microbial maturity index prediction.


Outputs:
--------
:sample_estimator.qza: Trained sample estimator.
:feature_importance.qza: Importance of each input feature to model accuracy.
:predictions.qza: Predicted target values for each input sample.
:model_summary.qzv: Summarized parameter and (if enabled) feature selection information for the trained estimator.
:accuracy_results.qzv: Accuracy results visualization.
:maz_scores.qza: Microbiota-for-age z-score predictions.
:clustermap.qzv: Heatmap of important feature abundance at each time point in each group.
:volatility_plots.qzv: Interactive volatility plots of MAZ and maturity scores, target (column) predictions, and the sample metadata.

|  

Description:
------------
Calculates a "microbial maturity" index from a regression model trained on feature data to predict a given continuous metadata column, e.g., to predict age as a function of microbiota composition. The model is trained on a subset of control group samples, then predicts the column value for all samples. This visualization computes maturity index z-scores to compare relative "maturity" between each group, as described in doi:10.1038/nature13421. This method can be used to predict between-group differences in relative trajectory across any type of continuous metadata gradient, e.g., intestinal microbiome development by age, microbial succession during wine fermentation, or microbial community differences along environmental gradients, as a function of two or more different "treatment" groups.


|  

</help>
    <citations>
        <citation type="doi">10.1038/nature13421</citation>
        <citation type="doi">10.21105/joss.00934</citation>
        <citation type="doi">10.1128/mSystems.00219-18</citation>
        <citation type="doi">10.1038/s41587-019-0209-9</citation>
    </citations>
</tool>
